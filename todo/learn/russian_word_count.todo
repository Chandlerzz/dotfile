查找俄语词并统计数量，C语言实现
基础知识
   1. unicode 俄语编码
     u0411->1041  u04ff->1279 
     u000A换行->0010 
     u000d回车->0013 
总体思路
状态 0 -> 1(从非俄语字符到俄语字符)
    记录单词开始位置
状态 1 -> 2(从俄语字符到非俄语字符)
    记录单词结束位置 复制单词到宽字符数组
    如果单词首字符没有在索引数组中创建一个index_item放到单词数组中
    如果word_index中位置数组已经存满，需要给位置数组翻倍扩容
    单词根据索引数组相对应的位置数组去找单词，若存在，该位置数量的值加1
    若不存在在单词数组新增一个该单词元素
    状态清零

DONE 需要编写的函数subwstring2021/09/13
DONE wchar_t* subwstring(wchar_t* ch,int pos,int length)  2021/09/13
数据结构
TODO 使用wcscmp 进行宽字符比较

索引数组
存储数组元素为 Set
单词数组
存储数组元素为 word struct

1.word结构体
struct word{
    wchar_t *word; /* 宽字符数组指针 */
    int     count; /* 重复出现的底数 */
}
